{
  "name": "MyProxy",
  "type": "flogo:app",
  "version": "1.0.0",
  "description": "This is a simple proxy.",
  "properties": null,
  "channels": null,
  "triggers": [
    {
      "name": "flogo-rest",
      "id": "MyProxy",
      "ref": "github.com/r2d2-ai/contrib/trigger/rest",
      "settings": {
        "port": "9096"
      },
      "handlers": [
        {
          "settings": {
            "method": "GET",
            "path": "/pets/:petId"
          },
          "actions": [
            {
              "id": "microgateway:Pets"
            }
          ]
        }
      ]
    }
  ],
  "resources": [
    {
      "id": "microgateway:Pets",
      "compressed": false,
      "data": {
        "name": "Pets",
        "steps": [
          {
            "service": "CircuitBreaker"
          },
          {
            "service": "PetStorePets",
            "halt": "($.PetStorePets.error != nil) && !error.isneterror($.PetStorePets.error)"
          },
          {
            "if": "$.PetStorePets.error != nil",
            "service": "CircuitBreaker",
            "input": {
              "operation": "counter"
            }
          },
          {
            "if": "$.PetStorePets.error == nil",
            "service": "CircuitBreaker",
            "input": {
              "operation": "reset"
            }
          }
        ],
        "responses": [
          {
            "if": "$.CircuitBreaker.outputs.tripped == true",
            "error": true,
            "output": {
              "code": 403,
              "data": {
                "error": "circuit breaker tripped"
              }
            }
          },
          {
            "if": "$.PetStorePets.outputs.data.status != 'available'",
            "error": true,
            "output": {
              "code": 403,
              "data": {
                "error": "Pet is unavailable",
                "pet": "=$.PetStorePets.outputs.data",
                "status": "=$.PetStorePets.outputs.data.status"
              }
            }
          },
          {
            "if": "$.PetStorePets.outputs.data.status == 'available'",
            "error": false,
            "output": {
              "code": 200,
              "data": {
                "pet": "=$.PetStorePets.outputs.data",
                "status": "=$.PetStorePets.outputs.data.status"
              }
            }
          },
          {
            "error": true,
            "output": {
              "code": 403,
              "data": {
                "error": "connection failure"
              }
            }
          }
        ],
        "services": [
          {
            "name": "CircuitBreaker",
            "description": "Circuit breaker service",
            "ref": "github.com/r2d2-ai/aiflow/microgateway/activity/circuitbreaker",
            "settings": {
              "mode": "a"
            }
          },
          {
            "name": "PetStorePets",
            "description": "Get pets by ID from the petstore",
            "ref": "github.com/r2d2-ai/contrib/activity/rest",
            "settings": {
              "uri": "http://localhost:1234/pets",
              "method": "GET"
            }
          }
        ]
      }
    }
  ],
  "actions": [
    {
      "ref": "github.com/r2d2-ai/aiflow-microgateway",
      "settings": {
        "uri": "microgateway:Pets"
      },
      "id": "microgateway:Pets",
      "metadata": null
    }
  ]
}
